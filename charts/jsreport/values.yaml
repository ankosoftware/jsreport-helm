# Default values for jsreport.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: jsreport/jsreport
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "4.10.1-full"

env:
  # Chrome/Puppeteer configuration for Kubernetes
  - name: chrome_launchOptions_args
    value: "--no-sandbox,--disable-dev-shm-usage,--disable-gpu,--disable-extensions,--disable-plugins"

  # JSReport authentication configuration
  - name: extensions_authentication_admin_username
    value: "admin"
  - name: extensions_authentication_admin_password
    value: "ChangeMe!Password!"
  - name: extensions_authentication_cookieSession_secret
    value: "ChangeMe!Secret!"

  # Performance and stability settings
  - name: NODE_ENV
    value: "production"
  - name: workers_numberOfWorkers
    value: "2"
  - name: workers_timeout
    value: "120000"
  - name: workers_portLeftBoundary
    value: "1000"
  - name: workers_portRightBoundary
    value: "2000"

  # Memory management for Node.js in containers
  - name: NODE_OPTIONS
    value: "--max-old-space-size=1536"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  # Security settings for JSReport container
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  capabilities:
    drop:
      - ALL
  allowPrivilegeEscalation: false
  # Note: readOnlyRootFilesystem is commented out as JSReport needs write access
  # for temporary files and Chrome cache
  # readOnlyRootFilesystem: true

service:
  type: ClusterIP
  port: 5488

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: jsreport.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # JSReport requires more resources due to Chrome/Puppeteer for PDF generation
  # These are recommended minimums for stable operation
  limits:
    cpu: 1000m
    memory: 2Gi
  requests:
    cpu: 500m
    memory: 1Gi

livenessProbe:
  httpGet:
    path: /
    port: 5488
  initialDelaySeconds: 30
  periodSeconds: 30
  timeoutSeconds: 10
  failureThreshold: 3
readinessProbe:
  httpGet:
    path: /
    port: 5488
  initialDelaySeconds: 15
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  # Temporary volume for JSReport and Chrome temp files
  - name: tmp-volume
    emptyDir:
      sizeLimit: 1Gi
  - name: chrome-cache
    emptyDir:
      sizeLimit: 512Mi

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  # Mount temporary volumes for JSReport operations
  - name: tmp-volume
    mountPath: /tmp
  - name: chrome-cache
    mountPath: /home/jsreport/.cache

nodeSelector: {}

tolerations: []

affinity: {}
